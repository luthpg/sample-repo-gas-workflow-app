name: Push to Gist

on:
  push:
    branches:
      - main

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load files excluding patterns
        run: |
          # 一時ファイル名を変数に定義
          TMP_ALL=all_files.txt
          TMP_EXC=excluded.txt
          TMP_FIL=filtered_files.txt
          find . -type f ! -name "$TMP_ALL" ! -name "$TMP_EXC" ! -name "$TMP_FIL" \
            | sed 's|^\./||' > "$TMP_ALL"
          grep -v '^#' .gistignore | grep -v '^$' > exclude_patterns.txt
          grep -f exclude_patterns.txt "$TMP_ALL" > "$TMP_EXC" || true
          comm -23 <(sort "$TMP_ALL") <(sort "$TMP_EXC") > "$TMP_FIL"
          echo "FILES=$(paste -sd ' ' "$TMP_FIL")" >> $GITHUB_ENV
          rm -f "$TMP_ALL" "$TMP_EXC" "$TMP_FIL" exclude_patterns.txt

      - name: Find files to push
        run: |
          GIST_ID="b44be26669d7fe80628bb684be4cfae5"
          for FILE in $FILES; do
            NAME="${FILE//\//%2F}"
            if [[ ! -s "$FILE" ]]; then
              echo "⚠️ $FILE は空なのでスキップします"
              continue
            fi

            echo "Updating $FILE"
            RESPONSE=$(curl -s \
              -X PATCH \
              -H "Authorization: token ${{ secrets.GIST_TOKEN }}" \
              -H "Content-Type: application/json" \
              "https://api.github.com/gists/$GIST_ID" \
              -d "$(jq -n --arg name "$NAME" --arg content "$(cat "$FILE")" \
                '{files: {($name): {content: $content}}}')")

            STATUS=$(echo "$RESPONSE" | jq -r '.status // empty')
            MESSAGE=$(echo "$RESPONSE" | jq -r '.message // empty')
            if [[ "$STATUS" == "422" ]]; then
              echo "❌ Gist更新失敗: $MESSAGE"
              echo "$RESPONSE" | jq
              exit 1
            fi
          done
